{"version":3,"sources":["candy-machine.ts","common/Img/index.tsx","reportWebVitals.ts","common/SvgIcon/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","components/Header/styles.ts","components/Header/index.tsx","components/Home/styles.ts","components/Home/Home.tsx","styles/styles.ts","router/styles.ts","router/index.tsx","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","ImgPers","src","width","height","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SvgIcon","FooterSection","styled","LogoContainer","CopyContainer","Text","NavLink","CustomNavLinkSmall","Footer","t","process","href","target","rel","HeaderSection","Header","useAnchorWallet","lg","md","sm","xs","offset","style","minWidth","fontFamily","color","fontSize","lineHeight","backgroundColor","variant","toBase58","GenContainer","Background","BlockContainer","ContentRightWrapper","ContentLeftWrapper","TextTitle","ContentInfoMint","ButtonContainer","Wave","MintContainer","div","Home","props","useState","balance","setBalance","isSoldOut","setIsSoldOut","isMinting","setIsMinting","setItemsAvailable","setItemsRedeemed","setItemsRemaining","startDate","setStartDate","isLive","useMemo","open","message","severity","undefined","alertState","setAlertState","setCandyMachine","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","useEffect","CircularProgress","onClick","toLocaleString","Img","Snackbar","autoHideDuration","onClose","Alert","viewBox","preserveAspectRatio","bottom","left","display","d","stroke","fill","Styles","createGlobalStyle","Container","network","Connection","startDateSeed","parseInt","History","lazy","Card","Roadmap","Faq","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","marginLeft","Router","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","fallback","ThemeProvider","autoConnect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12a64215.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","import { ImgProps } from \"../types\";\r\n\r\nexport const ImgPers = ({ src, width, height }: ImgProps) => (\r\n  <img src={`./img/${src}`} alt={src} width={width} height={height} />\r\n);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SvgIconProps } from \"../types\";\r\n\r\nexport const SvgIcon = ({ src, width, height }: SvgIconProps) => (\r\n  <img src={`./img/${src}`} alt={src} width={width} height={height} />\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterSection = styled(\"footer\")`\r\n  width: 100%;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 3rem 1rem 2rem 1rem;\r\n  background: #111;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 5rem 1rem 2rem 1rem;\r\n  }\r\n`;\r\n\r\nexport const LogoContainer = styled(\"div\")`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CopyContainer = styled(\"div\")`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  padding: 0.5rem 1rem;\r\n`;\r\n\r\nexport const Text = styled(\"section\")`\r\n  color: #EEE;\r\n  font-family: Baloo;\r\n  font-size: 20px;\r\n  line-height: 35px;\r\n  padding-top: 1rem;\r\n`;\r\n\r\nexport const NavLink = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CustomNavLinkSmall = styled(NavLink)`\r\n  margin: 1rem 0.5rem;\r\n  background-color: #fff;\r\n  border-radius: 20px;\r\n  padding: 0.5rem 0.5rem;\r\n  height: 50px;\r\n  width: 50px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  transition: all 0.4s ease-in-out;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background-color: rgba(200,200,200,0.5);\r\n  }\r\n`;","import { Row, Col } from \"antd\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  FooterSection,\r\n  LogoContainer,\r\n  CopyContainer,\r\n  Text,\r\n  CustomNavLinkSmall,\r\n  NavLink,\r\n} from \"./styles\";\r\n\r\n\r\nconst Footer = ({ t }: any) => {\r\n\r\n  return (\r\n    <FooterSection>\r\n\r\n      <LogoContainer>\r\n        <SvgIcon src=\"Logo1.png\" width=\"165px\" height=\"121px\" />\r\n      </LogoContainer>\r\n\r\n      <CopyContainer>\r\n        <Text> ©2021 {process.env.REACT_APP_PROJECT_NAME_LOWER}. All rights reserved. </Text>\r\n      </CopyContainer>\r\n\r\n      <CopyContainer>\r\n        <NavLink>\r\n          <a href={process.env.REACT_APP_PROJECT_TWITTER} target=\"_blank\" rel=\"noreferrer\">\r\n            <CustomNavLinkSmall>\r\n              <SvgIcon src=\"svg/twitter.svg\" width=\"25px\" height=\"25px\" />\r\n            </CustomNavLinkSmall>\r\n          </a>\r\n          <a href={process.env.REACT_APP_PROJECT_DISCORD} target=\"_blank\" rel=\"noreferrer\">\r\n            <CustomNavLinkSmall>\r\n              <SvgIcon src=\"svg/discord.svg\" width=\"25px\" height=\"25px\" />\r\n            </CustomNavLinkSmall>\r\n          </a>\r\n          </NavLink>\r\n      </CopyContainer>\r\n\r\n    </FooterSection>\r\n  );\r\n};\r\n\r\nexport default (Footer);\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderSection = styled(\"header\")`\r\n  position: relative;\r\n  width: 100%;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 0.5rem 5rem 0 5rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const LogoContainer = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(\"div\")`\r\n  display: -webkit-flex;\r\n  display: -moz-flex;\r\n  display: -ms-flex;\r\n  display: -o-flex;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  -webkit-justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const CustomNavLinkSmall = styled(NavLink)`\r\n  margin: 1rem 0.5rem;\r\n  background: #FFA7A6;\r\n  border-radius: 20px;\r\n  padding: 0.5rem 0.5rem;\r\n  height: 50px;\r\n  width: 50px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  box-shadow: 2px 2px 6px rgba(200, 46, 35, 50%);\r\n\r\n  transition: all 0.4s ease-in-out;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background: rgba(200, 46, 35, 0.1);\r\n  }\r\n`;\r\n\r\nexport const CustomNavLinkSmall2 = styled(NavLink)`\r\n  margin: 1rem 0.5rem;\r\n  padding: 0.5rem 0.5rem;\r\n  height: 50px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  transition: all 0.4s ease-in-out;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background: rgba(200, 46, 35, 0.1);\r\n  }\r\n`;","import { Row, Col } from \"antd\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  HeaderSection,\r\n  LogoContainer,\r\n  CustomNavLinkSmall,\r\n  NavLink,\r\n} from \"./styles\";\r\n\r\n// CANDY\r\nimport styled from \"styled-components\";\r\nimport { AnchorWallet, useAnchorWallet } from \"@solana/wallet-adapter-react\";\r\nimport { shortenAddress } from \"../../candy-machine\";\r\nimport { WalletDialogButton, WalletDisconnectButton } from \"@solana/wallet-adapter-material-ui\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n  // CANDY\r\n  interface IAnchorWallet extends AnchorWallet {\r\n    connected?: boolean;\r\n  }\r\n  \r\n  const wallet: IAnchorWallet | undefined = useAnchorWallet();\r\n\r\n  return (\r\n\r\n    <HeaderSection>\r\n\r\n        <Row>\r\n\r\n          <Col lg={12} md={12} sm={24} xs={24} offset={0}>\r\n            \r\n            <LogoContainer>\r\n              <SvgIcon src=\"Logo2.png\" width=\"165px\" height=\"121px\" />\r\n            </LogoContainer>\r\n\r\n          </Col>\r\n\r\n          <Col lg={12} md={12} sm={24} xs={24} offset={0}>\r\n\r\n            <NavLink>\r\n\r\n              <a href={process.env.REACT_APP_PROJECT_TWITTER} target=\"_blank\" rel=\"noreferrer\">\r\n                <CustomNavLinkSmall>\r\n                  <SvgIcon src=\"svg/twitter.svg\" width=\"25px\" height=\"25px\" />\r\n                </CustomNavLinkSmall>\r\n              </a>\r\n\r\n              <a href={process.env.REACT_APP_PROJECT_DISCORD} target=\"_blank\" rel=\"noreferrer\">\r\n                <CustomNavLinkSmall>\r\n                  <SvgIcon src=\"svg/discord.svg\" width=\"25px\" height=\"25px\" />\r\n                </CustomNavLinkSmall>\r\n              </a>\r\n\r\n              <CustomNavLinkSmall style={{minWidth: \"220px\"}}>\r\n                {!wallet && <WalletDialogButton style={{ fontFamily: 'BalooBold', color: \"#261919\", fontSize: \"22px\", lineHeight: \"50px\", backgroundColor: \"rgba(0, 0, 0, 0.0)\" }} variant=\"text\" color=\"default\"> Connect Wallet </WalletDialogButton>}\r\n                {wallet && <WalletDisconnectButton style={{ fontFamily: 'BalooBold', color: \"#261919\", fontSize: \"22px\", lineHeight: \"50px\", backgroundColor: \"rgba(0, 0, 0, 0.0)\" }} variant=\"text\" color=\"default\"> {shortenAddress(wallet.publicKey?.toBase58() || \"\")} </WalletDisconnectButton>}\r\n              </CustomNavLinkSmall>\r\n\r\n            </NavLink>\r\n\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n    </HeaderSection>\r\n  );\r\n};\r\n\r\nexport default (Header);\r\n","import styled from \"styled-components\";\r\n\r\nexport const GenContainer = styled(\"section\")`\r\n  position: relative;\r\n  width: 100%;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Background = styled(\"section\")`\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  background-color: rgba(254,140,138);\r\n`;\r\n\r\nexport const BlockContainer = styled(\"section\")`\r\n  padding: 0;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 2rem 0 0 0;\r\n  }\r\n`;\r\n\r\nexport const ContentRightWrapper = styled(\"div\")`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  bottom: 0;\r\n  padding-top: 10%;\r\n  padding-bottom: 6%;\r\n\r\n  @media only screen and (max-width: 992px) {\r\n    padding-bottom: 0%;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const ContentLeftWrapper = styled(\"div\")`\r\n  margin-top: 2rem;\r\n  height: 100%;\r\n  width: 100%;\r\n  align-items: center;\r\n  display: -webkit-flex;\r\n  display: -moz-flex;\r\n  display: -ms-flex;\r\n  display: -o-flex;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  -webkit-justify-content: flex-end;\r\n  text-align: right;\r\n\r\n  @media only screen and (max-width: 992px) {\r\n    text-align: center;\r\n    justify-content: center;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const TextTitle = styled(\"p\")`\r\n  text-shadow: 3px 3px 4px rgba(200, 46, 35, 50%);\r\n  color: #261919;\r\n  font-family: BalooBold;\r\n  font-size: 48px;\r\n  line-height: 60px;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Text = styled(\"p\")`\r\n  text-shadow: 2px 2px 3px rgba(200, 46, 35, 50%);\r\n  color: #261919;\r\n  font-family: BalooBold;\r\n  font-size: 32px;\r\n  line-height: 50px;\r\n  max-width: 650px;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nexport const ContentInfoMint = styled(\"p\")`\r\n  font-size: 12px;\r\n  color: #511500;\r\n  padding: 1rem 0;\r\n\r\n  display: -webkit-flex;\r\n  display: -moz-flex;\r\n  display: -ms-flex;\r\n  display: -o-flex;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  -webkit-justify-content: flex-end;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  min-width: 200px;\r\n  background: #FFA7A6;\r\n  border-radius: 25px;\r\n  padding: 0.5rem 2rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  font-family: \"BalooBold\", cursive;\r\n  color: #261919;\r\n  font-size: 32px;\r\n  font-weight: 300;\r\n\r\n  box-shadow: 2px 2px 6px rgba(200, 46, 35, 50%);\r\n\r\n  transition: all 0.4s ease-in-out;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background: rgba(200, 46, 35, 0.1);\r\n  }\r\n`;\r\n\r\nexport const Wave = styled(\"section\")`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100px;\r\n  bottom: -1px;\r\n  left: 0;\r\n  z-index: 4;\r\n\r\n  @media only screen and (max-width: 992px) {\r\n    height: 80px;\r\n  }\r\n  @media only screen and (max-width: 576px) {\r\n    height: 50px;\r\n  }\r\n`;","import Header from \"../../components/Header\";\r\nimport { Row, Col } from \"antd\";\r\nimport { ImgPers } from \"../../common/Img\";\r\n\r\nimport {\r\n  Background,\r\n  GenContainer,\r\n  BlockContainer,\r\n  ContentRightWrapper,\r\n  ContentLeftWrapper,\r\n  ButtonContainer,\r\n  ContentInfoMint,\r\n  Wave,\r\n  TextTitle,\r\n  Text,\r\n} from \"./styles\";\r\n\r\n\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Countdown from \"react-countdown\";\r\nimport { CircularProgress, Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\r\nimport { AnchorWallet, useAnchorWallet } from \"@solana/wallet-adapter-react\";\r\n\r\nimport {\r\n  CandyMachine,\r\n  awaitTransactionSignatureConfirmation,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n} from \"../../candy-machine\";\r\n\r\nconst CounterText = styled.span``;\r\nconst MintContainer = styled.div`\r\n  width: 100%;\r\n  display: -webkit-flex;\r\n  display: -moz-flex;\r\n  display: -ms-flex;\r\n  display: -o-flex;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  -webkit-justify-content: flex-end;\r\n\r\n  @media only screen and (max-width: 992px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport interface HomeProps {\r\n  candyMachineId: anchor.web3.PublicKey;\r\n  config: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  txTimeout: number;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n\r\n  const [balance, setBalance] = useState<number>();\r\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\r\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\r\n  const [itemsAvailable, setItemsAvailable] = useState(0);\r\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\r\n  const [itemsRemaining, setItemsRemaining] = useState(0);\r\n  const [startDate, setStartDate] = useState(new Date(props.startDate * 1000));\r\n  const isLive = useMemo(() => startDate <= new Date(), [startDate]);\r\n\r\n\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: \"\",\r\n    severity: undefined,\r\n  });\r\n\r\n  interface IAnchorWallet extends AnchorWallet {\r\n    connected?: boolean;\r\n  }\r\n  const wallet: IAnchorWallet | undefined = useAnchorWallet();\r\n\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\r\n\r\n  const refreshCandyMachineState = () => {\r\n    (async () => {\r\n      if (!wallet) return;\r\n\r\n      const {\r\n        candyMachine,\r\n        goLiveDate,\r\n        itemsAvailable,\r\n        itemsRemaining,\r\n        itemsRedeemed,\r\n      } = await getCandyMachineState(\r\n        wallet as anchor.Wallet,\r\n        props.candyMachineId,\r\n        props.connection\r\n      );\r\n\r\n      setItemsAvailable(itemsAvailable);\r\n      setItemsRemaining(itemsRemaining);\r\n      setItemsRedeemed(itemsRedeemed);\r\n\r\n      setIsSoldOut(itemsRemaining === 0);\r\n      setStartDate(goLiveDate);\r\n      setCandyMachine(candyMachine);\r\n    })();\r\n  };\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsMinting(true);\r\n      // Si on est dans la whitelist ou si la whitelist est passé\r\n      if (wallet && candyMachine?.program) {\r\n        \r\n        const mintTxId = await mintOneToken(\r\n          candyMachine,\r\n          props.config,\r\n          wallet.publicKey,\r\n          props.treasury\r\n        );\r\n\r\n        const status = await awaitTransactionSignatureConfirmation(\r\n          mintTxId,\r\n          props.txTimeout,\r\n          props.connection,\r\n          \"singleGossip\",\r\n          false\r\n        );\r\n\r\n        if (!status?.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Congratulations! Mint succeeded!\",\r\n            severity: \"success\",\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Mint failed! Please try again!\",\r\n            severity: \"error\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      // TODO: blech:\r\n      let message = error.msg || \"Minting failed! Please try again!\";\r\n      if (!error.msg) {\r\n        if (error.message.indexOf(\"0x138\")) {\r\n        } else if (error.message.indexOf(\"0x137\")) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf(\"0x135\")) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          setIsSoldOut(true);\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: \"error\",\r\n      });\r\n    } finally {\r\n      if (wallet) {\r\n        const balance = await props.connection.getBalance(wallet.publicKey);\r\n        setBalance(balance / LAMPORTS_PER_SOL);\r\n      }\r\n      setIsMinting(false);\r\n      refreshCandyMachineState();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (wallet) {\r\n        const balance = await props.connection.getBalance(wallet.publicKey);\r\n        setBalance(balance / LAMPORTS_PER_SOL);\r\n      }\r\n    })();\r\n  }, [wallet, props.connection]);\r\n\r\n  useEffect(refreshCandyMachineState, [\r\n    wallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n  ]);\r\n\r\n  return (\r\n    <GenContainer>\r\n\r\n      <Background />\r\n\r\n      <Header />\r\n\r\n      <BlockContainer >\r\n\r\n        <Row>\r\n\r\n          <Col lg={13} md={24} sm={24} xs={24} offset={0}>\r\n\r\n            <ContentLeftWrapper>\r\n              \r\n              <div>\r\n\r\n                <TextTitle>\r\n                  Welcome to\r\n                </TextTitle>\r\n                <TextTitle style={{ fontSize: \"56px\" }}>\r\n                  Teddy Bears Club\r\n                </TextTitle>\r\n\r\n                <Text>\r\n                  1,111 unique and limited Teddy Bears coming soon on #Solana and ready to stay\r\n                </Text>\r\n\r\n                <MintContainer>\r\n                  { isSoldOut ? \r\n                  ( \r\n                    <ButtonContainer>View on Secondary Market</ButtonContainer> \r\n                  ) : (\r\n                    !isLive ? \r\n                    ( \r\n                      <ButtonContainer>\r\n                        December 10, 2021\r\n                        {/* <Countdown date={startDate} onComplete={() => refreshCandyMachineState()} renderer={renderCounter} /> */}\r\n                      </ButtonContainer>\r\n                    ) : (\r\n                          (isLive && wallet) ? \r\n                            ( \r\n                              isMinting ? \r\n                              ( <CircularProgress /> ) :\r\n                              ( <ButtonContainer onClick={onMint}> Get a Teddy (1 SOL) </ButtonContainer>)\r\n                            ) : ( \r\n                              <ButtonContainer>Wallet not connected</ButtonContainer>\r\n                            )\r\n                      )\r\n                  )\r\n                  }\r\n                </MintContainer>  \r\n\r\n                { (wallet && !isSoldOut) ?\r\n                    ( \r\n                      (isLive) ? \r\n                      ( <ContentInfoMint>NFT available : {itemsRemaining} / {itemsAvailable} - Your balance : {(balance || 0).toLocaleString()} SOL</ContentInfoMint> ) \r\n                      :\r\n                      ( <ContentInfoMint>Your balance : {(balance || 0).toLocaleString()} SOL</ContentInfoMint> )                    \r\n                    )\r\n                    :\r\n                    (<ContentInfoMint></ContentInfoMint>)\r\n                }\r\n\r\n              </div>\r\n\r\n            </ContentLeftWrapper>\r\n\r\n          </Col>\r\n\r\n          <Col lg={11} md={24} sm={24} xs={24} offset={0}> \r\n            <ContentRightWrapper>\r\n                <ImgPers src=\"Ted.png\" width=\"80%\" height=\"80%\" />\r\n           </ContentRightWrapper>\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n  \r\n        <Snackbar open={alertState.open} autoHideDuration={6000} onClose={() => setAlertState({ ...alertState, open: false })} >\r\n          <Alert\r\n            onClose={() => setAlertState({ ...alertState, open: false })}\r\n            severity={alertState.severity}\r\n          >\r\n            {alertState.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n      </BlockContainer>\r\n\r\n      <Wave>\r\n        <svg viewBox=\"0 0 500 80\" preserveAspectRatio=\"none\" style={{height: \"100%\", width: \"100%\", bottom: \"0\", left: \"0\", display: \"block\" }} >\r\n          <path d=\"M0.00,49.98 C150.00,150.00 349.20,-50.00 500.00,49.98 L500.00,150.00 L0.00,190.00 Z\" style={{stroke: \"none\", fill: \"#111\", bottom: \"0\"}} />\r\n        </svg>\r\n      </Wave>\r\n \r\n    </GenContainer>\r\n  );\r\n};\r\n\r\n\r\ninterface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\n}\r\n\r\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\r\n  return (\r\n    <CounterText>\r\n      {(days || 0)} days {hours} hours {minutes} minutes {seconds} seconds\r\n    </CounterText>\r\n  );\r\n};\r\n\r\nexport default (Home);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Styles = createGlobalStyle`\r\n\r\n    @font-face {\r\n        font-family: \"Pixel\";\r\n        src: url(\"./fonts/SpaceGrotesk/SpaceGrotesk-Regular.ttf\") format(\"truetype\");\r\n        font-style: normal;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: \"Baloo\";\r\n        src: url(\"./fonts/Baloo_Paaji_2/BalooPaaji2-Regular.ttf\") format(\"truetype\");\r\n        font-style: normal;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: \"BalooBold\";\r\n        src: url(\"./fonts/Baloo_Paaji_2/BalooPaaji2-Bold.ttf\") format(\"truetype\");\r\n        font-style: normal;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: \"BalooMedium\";\r\n        src: url(\"./fonts/Baloo_Paaji_2/BalooPaaji2-Medium.ttf\") format(\"truetype\");\r\n        font-style: normal;\r\n    }\r\n\r\n    body,\r\n    html,\r\n    a {\r\n        font-family: \"BalooMedium\";\r\n    }\r\n\r\n\r\n    body {\r\n        margin:0;\r\n        padding:0;\r\n        border: 0;\r\n        outline: 0;\r\n        overflow-x: hidden;\r\n        color: #fff;\r\n    }\r\n\r\n    a:hover {\r\n        color: #18216d;\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n        font-family: \"BalooMedium\";\r\n        color: #fff;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n    }\r\n\r\n\r\n    h1 {\r\n        font-weight: 600;\r\n        font-size: 36px;\r\n    }\r\n    h2 {\r\n        font-size: 30px;\r\n    }\r\n    h3 {\r\n        font-size: 24px;\r\n    }\r\n    h4 {\r\n        font-size: 20px;\r\n    }\r\n    h5 {\r\n        font-size: 18px;\r\n    }\r\n    h6 {\r\n        font-size: 16px;\r\n    }\r\n\r\n    p {\r\n        color: #fff;\r\n        font-size: 18px;        \r\n        line-height: 1.5;\r\n    }\r\n\r\n\r\n\r\n    a {\r\n        text-decoration: none;\r\n        outline: none;\r\n        color: #fff;\r\n\r\n        :hover {\r\n            color: #fff;\r\n        }\r\n    }\r\n    \r\n    *:focus {\r\n        outline: none;\r\n    }\r\n\r\n    .about-block-image svg {\r\n        text-align: center;\r\n    }\r\n\r\n    .ant-drawer-content-wrapper {\r\n        width: 300px !important;\r\n    }\r\n\r\n`;","import styled from \"styled-components\";\n\nexport const Container = styled(\"section\")`\n    position: relative;\n    background: #111;\n`;","import { lazy, Suspense, Component } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport Home from \"../components/Home/Home\";\r\nimport { Styles } from \"../styles/styles\";\r\nimport { Container } from \"./styles\";\r\n\r\n// Import for candy\r\nimport { useMemo } from \"react\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from \"@solana/wallet-adapter-wallets\";\r\nimport { ConnectionProvider, WalletProvider, } from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\n// Constant for candy\r\nconst treasury = new anchor.web3.PublicKey( process.env.REACT_APP_TREASURY_ADDRESS! );\r\nconst config = new anchor.web3.PublicKey( process.env.REACT_APP_CANDY_MACHINE_CONFIG! );\r\nconst candyMachineId = new anchor.web3.PublicKey( process.env.REACT_APP_CANDY_MACHINE_ID! );\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\n// Constant site\r\nconst History = lazy(() => import(\"../components/History\"));\r\nconst Card = lazy(() => import(\"../components/Card\"));\r\nconst Roadmap = lazy(() => import(\"../components/Roadmap\"));\r\nconst Faq = lazy(() => import(\"../components/Faq\"));\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n      type: 'dark',\r\n  },\r\n  overrides: {\r\n      MuiButtonBase: {\r\n          root: {\r\n              justifyContent: 'flex-start',\r\n          },\r\n      },\r\n      MuiButton: {\r\n          root: {\r\n              textTransform: undefined,\r\n              padding: '12px 16px',\r\n          },\r\n          startIcon: {\r\n              marginRight: 8,\r\n          },\r\n          endIcon: {\r\n              marginLeft: 8,\r\n          },\r\n      },\r\n  },\r\n});\r\n\r\nconst Router = () => {\r\n\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n  const wallets = useMemo(\r\n    () => [\r\n        getPhantomWallet(),\r\n        getSlopeWallet(),\r\n        getSolflareWallet(),\r\n        getSolletWallet({ network }),\r\n        getSolletExtensionWallet({ network })\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Suspense fallback={<h1>Chargement du profil...</h1>}>\r\n\r\n      <Styles />\r\n\r\n      <Container>\r\n\r\n        <div>\r\n          <ThemeProvider theme={theme}>\r\n            <ConnectionProvider endpoint={endpoint}>\r\n              <WalletProvider wallets={wallets} autoConnect={true}>\r\n                <WalletDialogProvider style={{ fontFamily: 'BalooBold', backgroundColor: \"rgba(0, 0, 0, 0.5)\", color: \"#FFF\" }}>\r\n                    <Home\r\n                      candyMachineId={candyMachineId}\r\n                      config={config}\r\n                      connection={connection}\r\n                      startDate={startDateSeed}\r\n                      treasury={treasury}\r\n                      txTimeout={txTimeout}\r\n                    />\r\n                </WalletDialogProvider>\r\n              </WalletProvider>\r\n            </ConnectionProvider>\r\n          </ThemeProvider>\r\n        </div>\r\n\r\n        <History />\r\n        <Card />\r\n        <Roadmap />\r\n        <Faq />\r\n        <Footer />\r\n\r\n      </Container>\r\n\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport \"antd/dist/antd.css\";\nimport Router from \"./router\";\n\nReactDOM.render(\n  <React.StrictMode>\n        <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}